name: CI/CD Pipeline

on:
  push:
    branches:
      - master


jobs:
  build:
    runs-on: ubuntu-latest

    # services:
    #   postgres:
    #     image: postgres:12
    #     ports:
    #       - 5432:5432
    #     env:
    #       POSTGRES_USER: abdurahmanovnurbek
    #       POSTGRES_PASSWORD: 8017
    #       POSTGRES_DB: fenix

    # env:
    #   DB_NAME: fenix
    #   DB_USER: abdurahmanovnurbek
    #   DB_PASS: 8017
    #   DB_URL: postgres://abdurahmanovnurbek:8017@localhost:5432/fenix
    #   DEV_DB_URL: postgres://abdurahmanovnurbek:8017@localhost:5432/fenix
    #   PROD_DB_URL: postgres://abdurahmanovnurbek:8017@localhost:5432/fenix
    #   JWT_SECRET_KEY: fenix
    #   JWT_SECRET_TIME: 10
    #   NODE_ENV: dev
    #   APP_LOGS_PATH: ./logs/
    #   OPERATION_LOGS_PATH: ./logs/operations
    #   FILE_SIZE: 10MB
    #   PATH_FOR_FILE_UPLOAD: ./files
    #   PORT: 3000

    steps:
    - uses: actions/checkout@v2
    # ? disabling because the docker compose has the same logic 
    # - name: Set up Node.js
    #   uses: actions/setup-node@v1
    #   with:
    #     node-version: '18'
    # - name: Cache node modules
    #   uses: actions/cache@v2
      # env:
      #   cache-name: cache-node-modules
      # with:
      #   path: ~/.npm
      #   key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      #   restore-keys: |
      #     ${{ runner.os }}-build-${{ env.cache-name }}-
    # ? disabling because the docker compose has the same logic 
    # - name: Install Dependencies
      # run: npm install
    # # - name: Run Tests
    # #   run: npm run test
    # ? disabling because the docker compose has the same logic 
    # - name: Build
      # run: npm run build
    # - name: Docker Login
    #   uses: docker/login-action@v1
    #   with:
    #     username: ${{ secrets.DOCKER_USERNAME }}
    #     password: ${{ secrets.DOCKER_PASSWORD }}
    # - name: Build and Push Docker image
    #   run: |
    #     docker build -t yourusername/nestjs-app:${{ github.sha }} .
    #     docker push yourusername/nestjs-app:${{ github.sha }}
    # - name: Giving persmissions to executables 
    #   run: chmod +x entrypoint.sh init-db.sh
  
    - name: Deploy
      run: docker-compose --profile dev up --build
